package mapEditor;

import gamePhysics2D.Entity;
import gamePvE.PlayerEntity;

import java.io.File;
import java.io.Serializable;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import misc.BiHashMap;

/**
 * Object representation of a Teraball stage.
 * Generated by the MapCoder class by reading in a stage file.
 * MapCoder can also transform a StageInfo object in to a working game simulation.
 * This object exists primarily so a map can be built and edited by a map editor.
 * 
 * ***** DEPRECATED *****
 * This class was renamed to OldStageInfo, the class currently named StageInfo is the structure used now.
 * 
 * @author Kelton Finch
 */
public class OldStageInfo implements Serializable {
	
	private static final long serialVersionUID = -3634753086545278322L;
	
	public double stageWidth, stageHeight; //the stages bounds
	public PlayerEntity player; //the player entity
	public Map<Entity, String> entityCodeMap; //a map from entities to the line in a stage file that generate it
	public File nextStage; //the next stage
	
	public BiHashMap<String, Entity> linkableEntityIDs; //the link IDs of linkable entities
	public List<EntityLink> entityLinks; //entity links
	
	public OldStageInfo(double stageWidth, double stageHeight, PlayerEntity player,
			         Map<Entity, String> entityCodeMap, File nextStage,
			         BiHashMap<String, Entity> linkableEntityIDs, List<EntityLink> entityLinks){
		this.stageWidth = stageWidth;
		this.stageHeight = stageHeight;
		this.player = player;
		this.entityCodeMap = entityCodeMap;
		this.nextStage = nextStage;
		this.linkableEntityIDs = linkableEntityIDs;
		this.entityLinks = entityLinks;
	}
	
	//initializing an "empty" StageInfo is fine
	public OldStageInfo(){
		entityCodeMap = new HashMap<Entity, String>();
		linkableEntityIDs = new BiHashMap<String, Entity>();
		entityLinks = new ArrayList<EntityLink>();
	}
	
}
